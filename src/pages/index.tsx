import Head from 'next/head';

import {
  Repository,
  useGetRepositoriesQuery
} from '../generated/graphql-types';
import { RepositoriesSearchInput } from '../modules/repositories/components/SearchInput';
import { RepositoriesTable } from '../modules/repositories/components/Table';
import { useSearchRepositoryQueryParams } from '../modules/repositories/hooks/useSearchRepositoryQueryParams';

const DEFAULT_QUERY_VALUE = 'stars:>100000';
const DEFAULT_PAGE_SIZE = 10;

const Home = () => {
  const { queryPrams, pushParams } = useSearchRepositoryQueryParams();
  const { loading, error, data } = useGetRepositoriesQuery({
    variables: {
      query: queryPrams.query || DEFAULT_QUERY_VALUE,
      first: Number(queryPrams.first) || DEFAULT_PAGE_SIZE
    }
  });

  const handleOnSearch = (query: string) => {
    pushParams({ query });
  };

  const nodes = data?.search?.edges
    ?.map(edge => edge?.node)
    .filter(node => node?.__typename === 'Repository') as Partial<Repository>[];

  return (
    <>
      <Head>
        <title>React Graphql Playground</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <RepositoriesSearchInput onSearch={handleOnSearch} />
      <RepositoriesTable dataSource={nodes} loading={loading} />
    </>
  );
};

export default Home;
